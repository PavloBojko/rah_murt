Компонент QueryBuilder.
Представляет собой класс, который содержит следующие методы 

1. get_table_if_no_data(string $table, array $data = null) - получаем таблицу.
    на входе этот метод имеет обязательный параметр $table типа string и необязательный
    параметр $data типа array. Етот метод нам вернет ассоциативный массив. 
    Передавая название таблицы $table, метод нам вернет всю таблицу, если мы передадим $data
    в виде массива ключ - значение ['email' => 'pipel@gmail.com'] метод будет искать
    в таблице $table в поле email значение pipel@gmail.com если данное значение pipel@gmail.com
    существует в поле email таблицы $table метод вернет нам строку таблицы в виде массива, если   нет  то null.

2. add_table(string $table, array $data) - добавляем в таблицу.  
    Метод имеет два параметра, первый название таблицы, и второй массив данных, которые мы хотим  вставить  в таблицу $table, ключами этого массива являются названия полей таблицы.
    [
        'email' => $_POST['email'],
        'password' => password_hash($_POST['password'], PASSWORD_DEFAULT)
    ]
3. add_in_table_return_id(string $table, array $data) - добавляем в таблицу  и получаем id добавленного поля. Метод работает аналогично add_table() только еще возвращает id добавленной строки.

4. update_table(string $table, array $data, string $id) - обновляем поля в таблице.
    Метод имеет на входе три параметра первый название таблицы типа string, второй данные которые мы хотим  обновить типа array 
    [
        'email' => $_POST['email'],
        'password' => password_hash($_POST['password'], PASSWORD_DEFAULT)
    ]
    ключи являются названиями полей таблицы, и третий параметр это $id строки в которой мы хотим обновить данные.

5. del_rows(string $table, string $id) - удаляем строку из таблицы.
     Метод имеет на входе два параметра первый название таблицы $table типа string, второй $id строки которую  мы хотим удалить.

Конфигурация базы данных находится в файле config.php в виде ассоциативного массива 
[
    'dataBase'=>[
        'dataBase'=>'rahmur', -название db
        'userName'=>'root', - имя пользователя db
        'password'=>'', - пароль к db
        'connection'=>'mysql:hosh=localhost', - драйвер db (mysql) и хост. 
        'charset'=>'utf8' - тип кодировки.
    ]
]

Класс  Connection который находится в Connection.php содержит стоический метод make(array $config)
он на входе принимает один параметр типа array, в этом массиве содержится конфигурация подключения
к базе данных.
Этот метод создает экземпляр глобального класса PDO.

Наш компонент имеет стартовый файл start.php этот файл нужно подключить у себя в проекте в точке входа. 
в start.php -  вызывается статический  метод make($config['dataBase']) в который мы передаем инфу о нашей базе  и создается экземпляр нашего класса QueryBuilder. После чего мы уже полноценно можем пользоваться его выше описанными методами.  
